{"mappings":"AAAA;AAEA,MAAM,gBAAgB;OAAI,SAAS,gBAAgB,CAAC;CAAM;AAC1D,MAAM,yBAAyB,SAAS,aAAa,CAAC;AAEtD,SAAS,SAAS,gBAAgB,EAAE,mBAAmB;IACrD,MAAM,sBAAsB,iBAAiB,IAAI,CAAC,CAAC,GAAG;QACpD,OACE,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,MACrC,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW;IAEzC;IAEA,oBAAoB,OAAO,CAAC,CAAC,OAAS,oBAAoB,MAAM,CAAC;AACnE;AAEA,SAAS,aAAa,gBAAgB;IACpC,OAAO,iBAAiB,GAAG,CAAC,CAAC;QAC3B,OAAO;YACL,MAAM,GAAG,SAAS;YAClB,UAAU,GAAG,OAAO,CAAC,QAAQ;YAC7B,QAAQ,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW;YAC9C,KAAK,CAAC,GAAG,OAAO,CAAC,GAAG;QACtB;IACF;AACF;AAEA,SAAS,eAAe;AACxB,aAAa","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst employeesList = [...document.querySelectorAll('li')];\nconst employeesListContainer = document.querySelector('ul');\n\nfunction sortList(employeesListArr, employeesListParent) {\n  const sortedEmployeesList = employeesListArr.sort((a, b) => {\n    return (\n      +b.dataset.salary.replace(/[^0-9]/g, '') -\n      +a.dataset.salary.replace(/[^0-9]/g, '')\n    );\n  });\n\n  sortedEmployeesList.forEach((item) => employeesListParent.append(item));\n}\n\nfunction getEmployees(employeesListArr) {\n  return employeesListArr.map((el) => {\n    return {\n      name: el.innerText,\n      position: el.dataset.position,\n      salary: +el.dataset.salary.replace(/[^0-9]/g, ''),\n      age: +el.dataset.age,\n    };\n  });\n}\n\nsortList(employeesList, employeesListContainer);\ngetEmployees(employeesList);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}